name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Clippy
      run: cargo clippy -- -D warnings
    - name: Build
      run: cargo build --package=piper --verbose
    - name: Run tests
      env:
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        REDIS_HOST: ${{ secrets.REDIS_HOST }}
        REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
        REDIS_TABLE: ${{ secrets.REDIS_TABLE }}
        COSMOS_ACCOUNT: ${{ secrets.COSMOS_ACCOUNT }}
        COSMOS_API_KEY: ${{ secrets.COSMOS_API_KEY }}
        COSMOS_DATABASE: ${{ secrets.COSMOS_DATABASE }}
        COSMOS_COLLECTION: ${{ secrets.COSMOS_COLLECTION }}
        CONN_STR: ${{ secrets.CONN_STR }}
      run: cargo test --package=piper --verbose
    - name: Run cargo-tarpaulin
      env:
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        REDIS_HOST: ${{ secrets.REDIS_HOST }}
        REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
        REDIS_TABLE: ${{ secrets.REDIS_TABLE }}
        COSMOS_ACCOUNT: ${{ secrets.COSMOS_ACCOUNT }}
        COSMOS_API_KEY: ${{ secrets.COSMOS_API_KEY }}
        COSMOS_DATABASE: ${{ secrets.COSMOS_DATABASE }}
        COSMOS_COLLECTION: ${{ secrets.COSMOS_COLLECTION }}
        CONN_STR: ${{ secrets.CONN_STR }}
      uses: actions-rs/tarpaulin@v0.1
      with:
        version: '0.15.0'
        args: '--exclude  standalone,java --workspace --exclude-files java,standalone,python -- --test-threads 1'

    - name: Upload to codecov.io
      uses: codecov/codecov-action@v1.0.2
      with:
        token: ${{secrets.CODECOV_TOKEN}}

    - name: Archive code coverage results
      uses: actions/upload-artifact@v1
      with:
        name: code-coverage-report
        path: cobertura.xml
